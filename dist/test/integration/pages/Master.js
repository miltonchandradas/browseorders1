sap.ui.define(["sap/ui/test/Opa5","sap/ui/test/actions/Press","./Common","sap/ui/test/actions/EnterText","sap/ui/test/matchers/AggregationLengthEquals","sap/ui/test/matchers/AggregationFilled","sap/ui/test/matchers/Properties"],function(e,t,s,r,i,n,o){"use strict";e.createPageObjects({onTheMasterPage:{baseClass:s,viewName:"Master",actions:{iWaitUntilTheListIsLoaded:function(){return this.waitFor({id:"list",matchers:new n({name:"items"}),errorMessage:"The master list has not been loaded"})},iRememberTheSelectedItem:function(){return this.waitFor({id:"list",matchers:function(e){return e.getSelectedItem()},success:function(e){this.iRememberTheListItem(e)},errorMessage:"The list does not have a selected item so nothing can be remembered"})},iRememberTheIdOfListItemAtPosition:function(e){return this.waitFor({id:"list",matchers:function(t){return t.getItems()[e]},success:function(e){this.iRememberTheListItem(e)},errorMessage:"The list does not have an item at the index "+e})},iRememberAnIdOfAnObjectThatsNotInTheList:function(){var e=this.getEntitySet("Orders");return this.waitFor({id:"list",matchers:new n({name:"items"}),success:function(t){var s,r=e.filter(function(e){return!t.getItems().some(function(t){return t.getBindingContext().getProperty("OrderID")===e.OrderID})});if(!r.length){s=e[e.length-1].OrderID}else{s=r[0].OrderID}var i=this.getContext().currentItem;i.bindingPath="/"+t.getModel().createKey("Orders",{OrderID:s});i.id=s},errorMessage:"the model does not have a item that is not in the list"})},iPressOnTheObjectAtPosition:function(e){return this.waitFor({id:"list",matchers:function(t){return t.getItems()[e]},actions:new t,errorMessage:"List 'list' in view 'Master' does not contain an ObjectListItem at position '"+e+"'"})},iSearchFor:function(e){return this.waitFor({id:"searchField",actions:[new r({text:e}),new t],errorMessage:"Can't search for "+e})},iSearchForNotFound:function(){return this.iSearchFor("*#-Q@@||")},iClearTheSearch:function(){return this.waitFor({id:"searchField",actions:new t({idSuffix:"reset"}),errorMessage:"Failed to clear the search in master list"})},iRememberTheListItem:function(e){var t=e.getBindingContext();this.getContext().currentItem={bindingPath:t.getPath(),id:t.getProperty("OrderID"),title:t.getProperty("OrderID")}},iFilterTheListOn:function(e){return this.waitFor({id:"filterButton",actions:new t,success:function(){this.waitFor({searchOpenDialogs:true,controlType:"sap.m.StandardListItem",matchers:new o({title:"Orders"}),actions:new t,success:function(){this.waitFor({searchOpenDialogs:true,controlType:"sap.m.StandardListItem",matchers:new o({title:e}),actions:new t,success:function(){this.waitFor({searchOpenDialogs:true,controlType:"sap.m.Button",matchers:new o({text:"OK"}),actions:new t,errorMessage:"The OK button in the filter dialog could not be pressed"})},errorMessage:"Did not find the "+e+" option in Orders"})},errorMessage:"Did not find the Orders in filter dialog"})},errorMessage:"Did not find the filter button"})},iResetFilters:function(){return this.waitFor({id:"filterButton",actions:new t,success:function(){return this.waitFor({searchOpenDialogs:true,controlType:"sap.m.Button",matchers:new o({text:"Reset"}),actions:new t,success:function(){return this.waitFor({searchOpenDialogs:true,controlType:"sap.m.Button",matchers:new o({text:"OK"}),actions:new t,errorMessage:"Did not find the ViewSettingDialog's 'OK' button."})},errorMessage:"Did not find the ViewSettingDialog's 'Reset' button."})},errorMessage:"Did not find the 'filter' button."})},iGroupTheList:function(){return this.iChooseGrouping("Group by Customer")},iResetGrouping:function(){return this.iChooseGrouping("None")},iChooseGrouping:function(e){return this.waitFor({id:"groupButton",actions:new t,success:function(){this.waitFor({controlType:"sap.m.StandardListItem",matchers:new o({title:e}),searchOpenDialogs:true,actions:new t,success:function(){this.waitFor({controlType:"sap.m.Button",matchers:new o({text:"OK"}),searchOpenDialogs:true,actions:new t,errorMessage:"The ok button in the grouping dialog could not be pressed"})},errorMessage:"Did not find the"+e+" element in grouping dialog"})},errorMessage:"Did not find the group button"})}},assertions:{theListHeaderDisplaysZeroHits:function(){return this.theHeaderShouldDisplayOrders(0)},theListHasEntries:function(){return this.waitFor({id:"list",matchers:new n({name:"items"}),success:function(){e.assert.ok(true,"The master list has items")},errorMessage:"The maste list has no items"})},iShouldSeeTheList:function(){return this.waitFor({id:"list",success:function(t){e.assert.ok(t,"Found the master List")},errorMessage:"Can't find the master list."})},theListShowsOnlyObjectsContaining:function(t){this.waitFor({id:"list",matchers:new n({name:"items"}),check:function(e){var s=e.getItems().every(function(e){return e.getAttributes()[0].getText().indexOf(t)!==-1});return s},success:function(){e.assert.ok(true,"Every item in the master list contains the text "+t)},errorMessage:"Not all items in the master list contain the text "+t})},theListShouldHaveAllEntries:function(){var t;return this.waitFor({id:"list",success:function(s){var r=this.getEntitySet("Orders");t=Math.min(s.getGrowingThreshold(),r.length);return this.waitFor({id:"list",matchers:new i({name:"items",length:t}),success:function(){e.assert.ok(true,"The master list displays all items up to the growing threshold")},errorMessage:"The master list does not display all items up to the growing threshold"})}.bind(this)})},iShouldSeeTheNoDataText:function(){return this.waitFor({id:"list",success:function(t){e.assert.strictEqual(t.getNoDataText(),t.getModel("i18n").getProperty("masterListNoDataWithFilterOrSearchText"),"the list should show the no data text for search and filter")},errorMessage:"list does not show the no data text for search and filter"})},theHeaderShouldDisplayAllEntries:function(){return this.waitFor({id:"list",success:function(e){var t=e.getBinding("items").getLength();return this.theHeaderShouldDisplayOrders(t)},errorMessage:"Can't find the master list"})},theHeaderShouldDisplayOrders:function(t){return this.waitFor({id:"masterHeaderTitle",matchers:new o({text:"Orders ("+t+")"}),success:function(){e.assert.ok(true,"The master page header displays "+t+" orders")},errorMessage:"The  master page header does not display "+t+" orders."})},theListShouldHaveNoSelection:function(){return this.waitFor({id:"list",matchers:function(e){return!e.getSelectedItem()},success:function(t){e.assert.strictEqual(t.getSelectedItems().length,0,"The list selection is removed")},errorMessage:"List selection was not removed"})},theRememberedListItemShouldBeSelected:function(){this.waitFor({id:"list",matchers:function(e){return e.getSelectedItem()},success:function(t){e.assert.strictEqual(t.getTitle(),"Order "+this.getContext().currentItem.title,"The list selection is incorrect")},errorMessage:"The list has no selection"})},theListShouldBeFilteredOnShippedOrders:function(){function t(e){var t=function(e){if(!e.getBindingContext()){return false}else{var t=e.getBindingContext().getProperty("ShippedDate");if(!t){return false}else{return true}}};return e.getItems().every(t)}return this.waitFor({id:"list",matchers:t,success:function(){e.assert.ok(true,"Master list has been filtered correctly")},errorMessage:"Master list has not been filtered correctly"})},theListShouldContainAGroupHeader:function(){return this.waitFor({controlType:"sap.m.GroupHeaderListItem",success:function(){e.assert.ok(true,"Master list is grouped")},errorMessage:"Master list is not grouped"})},theListShouldNotContainGroupHeaders:function(){function t(e){return e.getMetadata().getName()==="sap.m.GroupHeaderListItem"}return this.waitFor({id:"list",matchers:function(e){return!e.getItems().some(t)},success:function(){e.assert.ok(true,"Master list does not contain a group header")},errorMessage:"Master list still contains a group header although grouping has been removed."})}}}})});